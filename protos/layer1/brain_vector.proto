syntax = "proto3";

package com.jio.fabric;

option java_multiple_files = true;
enum BrainVectorType {
  BRAIN_STR_VECTOR = 0;	// string
  BRAIN_IDX_VECTOR = 1;	// index (uint32 1, 2, 3, â€¦)
  BRAIN_S32_VECTOR = 2;	// signed integer
  BRAIN_U32_VECTOR = 3;	// unsigned integer
  BRAIN_F32_VECTOR = 4;	// float with 32 bit precision
  BRAIN_S64_VECTOR = 5;	// signed long
  BRAIN_U64_VECTOR = 6;	// unsigned long
  BRAIN_F64_VECTOR = 7;	// double with 64 bit precision
}

message BrainVector {
  BrainVectorType vector_type = 1;
  oneof vector_is_one_of {
    BrainStrVector str = 2;
    BrainIdxVector idx = 3;
    BrainS32Vector s32 = 4;
    BrainU32Vector u32 = 5;
    BrainF32Vector f32 = 6;
    BrainS64Vector s64 = 7;
    BrainU64Vector u64 = 8;
    BrainF64Vector f64 = 9;
  }
}

message BrainStrVector{
  repeated string element = 1;
}

message BrainIdxVector {
  repeated uint32 element = 1;
}

message BrainS32Vector {
  repeated sint32 element = 1;
}

message BrainU32Vector {
  repeated uint32 element = 1;
}

message BrainF32Vector {
  repeated float element = 1;
}

message BrainS64Vector {
  repeated sint64 element = 1;
}

message BrainU64Vector {
  repeated uint64 element = 1;
}

message BrainF64Vector {
  repeated double element = 1;
}

message BrainSparseVector {
  BrainVectorType sparse_vector_type = 1;
  oneof sparse_vector_is_one_of {
    BrainStrSparseVector str = 2;
    BrainIdxSparseVector idx = 3;
    BrainS32SparseVector s32 = 4;
    BrainU32SparseVector u32 = 5;
    BrainF32SparseVector f32 = 6;
    BrainS64SparseVector s64 = 7;
    BrainU64SparseVector u64 = 8;
    BrainF64SparseVector f64 = 9;
  }
}


message BrainStrSparseVector {
  map<uint32, string> element = 1;
}

message BrainIdxSparseVector {
  map<uint32, uint32> element = 1;
}

message BrainS32SparseVector {
  map<uint32, sint32> element = 1;
}

message BrainU32SparseVector {
  map<uint32, uint32> element = 1;
}

message BrainF32SparseVector {
  map<uint32, float> element = 1;
}

message BrainS64SparseVector {
  map<uint32, sint64> element = 1;
}

message BrainU64SparseVector {
  map<uint32, uint64> element = 1;
}

message BrainF64SparseVector {
  map<uint32, double> element = 1;
}
