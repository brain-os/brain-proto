syntax = "proto3";

package com.jio.fabric;

option java_multiple_files = true;

enum BrainVectorEnum {
  BRAIN_VECTOR_STR = 0;	// string
  BRAIN_VECTOR_IDX = 1;	// index (uint32 1, 2, 3, â€¦)
  BRAIN_VECTOR_S32 = 2;	// signed integer
  BRAIN_VECTOR_U32 = 3;	// unsigned integer
  BRAIN_VECTOR_F32 = 4;	// float with 32 bit precision
  BRAIN_VECTOR_S64 = 5;	// signed long
  BRAIN_VECTOR_U64 = 6;	// unsigned long
  BRAIN_VECTOR_F64 = 7;	// double with 64 bit precision
}


message BrainVector {
  BrainVectorEnum vector_type = 1;
  oneof vector_is_one_of {
    BrainVectorStr str = 2;
    BrainVectorIdx idx = 3;
    BrainVectorS32 s32 = 4;
    BrainVectorU32 u32 = 5;
    BrainVectorF32 f32 = 6;
    BrainVectorS64 s64 = 7;
    BrainVectorU64 u64 = 8;
    BrainVectorF64 f64 = 9;
  }
}

message BrainVectorStr{
  repeated string element = 1;
}

message BrainVectorIdx {
  repeated uint32 element = 1;
}

message BrainVectorS32 {
  repeated sint32 element = 1;
}

message BrainVectorU32 {
  repeated uint32 element = 1;
}

message BrainVectorF32 {
  repeated float element = 1;
}

message BrainVectorS64 {
  repeated sint64 element = 1;
}

message BrainVectorU64 {
  repeated uint64 element = 1;
}

message BrainVectorF64 {
  repeated double element = 1;
}

message BrainSparseVector {
  BrainVectorEnum sparse_vector_type = 1;
  oneof sparse_vector_is_one_of {
    BrainSparseVectorStr str = 2;
    BrainSparseVectorIdx idx = 3;
    BrainSparseVectorS32 s32 = 4;
    BrainSparseVectorU32 u32 = 5;
    BrainSparseVectorF32 f32 = 6;
    BrainSparseVectorS64 s64 = 7;
    BrainSparseVectorU64 u64 = 8;
    BrainSparseVectorF64 f64 = 9;
  }
}
message BrainSparseVectorStr {
  map<uint32, string> element = 1;
}

message BrainSparseVectorIdx {
  map<uint32, uint32> element = 1;
}

message BrainSparseVectorS32 {
  map<uint32, sint32> element = 1;
}

message BrainSparseVectorU32 {
  map<uint32, uint32> element = 1;
}

message BrainSparseVectorF32 {
  map<uint32, float> element = 1;
}

message BrainSparseVectorS64 {
  map<uint32, sint64> element = 1;
}

message BrainSparseVectorU64 {
  map<uint32, uint64> element = 1;
}

message BrainSparseVectorF64 {
  map<uint32, double> element = 1;
}
