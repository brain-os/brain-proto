syntax = "proto3";

package com.jio.brain;

option java_multiple_files = true;

import "config.proto";
import "index.proto";
import "schema.proto";

//////////// OLD BELOW ///////////

message BrainDictionary {
  // key = vertical (common, telecom, retail, etc.)
  map<string, BrainQuantityDictionary> quantity = 1;
  map<string, BrainEntityDictionary> entity = 2;
  map<string, BrainEventDictionary> event = 3;
  map<string, BrainProcessDictionary> process = 4;
}

message BrainQuantityDictionary {
  BrainQuantityConfigDictionary config_dict = 1;
  BrainQuantitySchemaDictionary schema_dict = 2;
  BrainForwardIndex forward = 3;// /telecom/quantity/rsrp - 3
  BrainReverseIndex reverse = 4;
}

message BrainEntityDictionary {
  BrainEntityConfigDictionary config_dict = 1;
  BrainEntitySchemaDictionary schema_dict = 2;
  BrainForwardIndex forward = 3;
  BrainReverseIndex reverse = 4;
}

message BrainEventDictionary {
  repeated BrainEntityConfig config = 1;
  repeated BrainEntitySchema schema = 2;
  BrainForwardIndex forward = 3;
  BrainReverseIndex reverse = 4;
}

message BrainProcessDictionary {
  repeated BrainProcessConfig config = 1;
  repeated BrainProcessSchema schema = 2;
  BrainForwardIndex forward = 3;
  BrainReverseIndex reverse = 4;

}

message BrainConfigDictionary {
  BrainQuantityConfigDictionary quantity = 1;
  BrainEntityConfigDictionary entity = 2;
  BrainEventConfigDictionary event = 3;
  BrainProcessConfigDictionary process = 4;
}

//message BrainQuantityConfigDictionary {
//  string vertical = 1;
//  repeated BrainQuantityConfig quantity = 2;
//}

message BrainEntityConfigDictionary {
  string vertical = 1;
  repeated BrainEntityConfig entity = 2;
}

message BrainEventConfigDictionary {
  string vertical = 1;
  repeated BrainEventConfig entity = 2;
}

message BrainProcessConfigDictionary {
  string vertical = 1;
  repeated BrainProcessConfig entity = 2;
}

message BrainSchemaDictionary {
  BrainQuantitySchemaDictionary quantity = 1;
  BrainEntitySchemaDictionary entity = 2;
  BrainEventSchemaDictionary event = 3;
  BrainProcessSchemaDictionary process = 4;
}

//message BrainQuantitySchemaDictionary {
//  // key = quantity-descriptor
//  // e.g. /telecom/quantity/RSRP
//  // e.g. /telecom/quantity/RSRP_BIN
//  // e.g. /telecom/quantity/TOWER_TYPE
//  // e.g. /telecom/quantity/TOWER_LOCATION
//  // e.g. /telecom/quantity/CELL_AZIMUTH
//  // e.g. /telecom/quantity/CUSTOMER_ADDRESS
//  map<string, BrainQuantitySchema> schema = 1;
//}

message BrainEntitySchemaDictionary {
  map<string, BrainEntitySchema> schema = 1;
}

message BrainEventSchemaDictionary {
  map<string, BrainEventSchema> schema = 1;
  // key = topic
  // e.g. /telecom/event/NETWORK_LSR_RAW
  // e.g. /telecom/event/NETWORK_LSR_QUANTIEZED
  // e.g. /telecom/event/NETWORK_LSR_ENRICHED

}

message BrainProcessSchemaDictionary {

}

