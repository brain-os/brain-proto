syntax = "proto3";

package com.jio.fabric;

option java_multiple_files = true;

import "layer0/token.proto";
import "layer1/collection.proto";
import "layer3/quantity.proto";
import "layer4/entity.proto";

message BrainEvent {
  uint32 id = 1; //
  BrainEventKey key = 2;
  BrainEventValue value = 3;
}
message BrainEventKey {
  BrainEntityStore entity_store = 1;    // customer, cell-id
  BrainQuantityStore context_store = 2;  // tie-stamp, lat-long
}
message BrainEventValue {
  BrainEntityStore entity_store = 1;
  BrainQuantityStore property_store = 2;
  BrainEntityValueStore attribute_store = 3;
  BrainEntityValueStore attribute_qualifier_store = 4;
  BrainEntityValueStore predicate_store = 5;
  BrainEntityValueStore predicate_qualifier_store = 6;
}
message BrainEntityStore {
  // key = BrainId32(/v/d/entity/<entity>)
  map<uint32, BrainEntitySet> entity_type = 1;
}
message BrainQuantityStore {
  // key = property, context, attribute, predicate, qualifier
  map<uint32, BrainQuantity> value = 2;
}
message BrainEntityValueStore {
  // key = entity id
  map<uint64, BrainQuantityStore> value = 2;
}
message BrainEventSchema {
  BrainToken token = 1;
  BrainEventKeySchema key = 2;
  BrainEventValueSchema value = 3;
}
message BrainEventKeySchema {
  BrainEntityStoreSchema entity = 1;
  BrainContextStoreSchema context = 2;
}
message BrainEventValueSchema {
  BrainEntityStoreSchema entity = 1;
  map<string, BrainQuantitySchema> property = 2;
}
message BrainEntityStoreSchema {
  map<string, BrainEntitySchema> entity = 1;
}
message BrainContextStoreSchema {
  map<string, BrainQuantitySchema> context = 1;
}
message BrainPropertyStoreSchema {
  map<string, BrainQuantitySchema> property = 1;
}