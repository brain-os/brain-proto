syntax = "proto3";

package com.jio.fabric;

option java_multiple_files = true;

import "layer0/base.proto";
import "layer0/token.proto";
import "layer1/collection.proto";
import "layer1/set.proto";
import "layer3/quantity.proto";

message EntitySchema {
  BrainToken token = 1;
  repeated BrainToken biz_type = 4;
  // key = ID(/v/d/attribute/entity_type/attribute_name)
  map<uint32, BrainEntityAttributeSchema> attribute = 5;
  // key = ID(/v/d/predicate/subject_type/predicate_name/object_type)
  map<uint32, BrainEntityPredicateSchema> predicate = 6;
}

message BrainEntityAttributeSchema {
  uint32 quantity_type = 1;
  BrainKnowledgeQualifierSchema qualifiers = 2;
}

message BrainEntityPredicateSchema {
  uint32 object_type_id = 1;
  BrainKnowledgeQualifierSchema qualifiers = 2;
}
message BrainKnowledgeQualifierSchema {
  // key = ID(/v/d/<type>_qualifier/*)
  map<uint32, BrainQuantitySchema> qualifier = 2;
}

message AttributeSchema {

}

message AttributeQualifierSchema {

}

message PredicateSchema {

}

message PredicateQualifierSchema {

}

message BrainEntity {
  uint64 id = 1;
  uint32 type = 2;

  // key = ID(/v/d/bizid/<entity_type>/<biz_id_type>)
  // e.g. ID(/common/customer/bizid/person/adhaar)
  map<uint32, string> biz_id = 3;

  // key = ID(/common/language/Hin_NI)
  map<uint32, BrainEntityName> name = 4;

  // key = ID(/v/d/entity_type/attribute_name)
  map<uint32, BrainEntityAttribute> attribute = 5;

  // key = ID(/v/d/subject_type/predicate_name/object_type)
  map<uint32, BrainEntityPredicate> predicate = 6;
}
message BrainEntityName {
  string canonical = 1;
  BrainStrSet aliases = 2;
}
message BrainEntityAttribute {
  oneof entity_attribute_is {
    BrainQuantity absolute = 1;
    BrainQualifiedQuantitySet qualified = 2;
  }
}
message BrainQualifiedQuantitySet {
  repeated BrainQualifiedQuantity quantity = 1;
}
message BrainQualifiedQuantity {
  BrainQuantity value = 1;
  map<uint32, BrainQuantity> qualifier = 2;
}
message BrainEntityPredicate {
  oneof predicate_is_one_of {
    BrainEntitySet objects = 1;
    BrainQualifiedEntitiesSet qualified = 2;
  }
}
message BrainQualifiedEntitiesSet {
  repeated BrainQualifiedEntities objects = 1;
}
message BrainQualifiedEntities {
  BrainEntitySet entities = 1;
  map<uint32, BrainQuantity> qualifier = 2;
}
