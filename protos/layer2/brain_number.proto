syntax = "proto3";

package com.jio.fabric;

option java_multiple_files = true;

import  "layer1/base.proto";
import  "layer1/set.proto";
import  "layer1/vector.proto";
import  "layer1/matrix.proto";

message BrainNumber {
  oneof number_is_one_of {
    sint32 s32 = 1;
    uint32 u32 = 2;
    float f32 = 3;
    sint64 s64 = 4;
    uint64 u64 = 5;
    double f64 = 6;
  }
}

message BrainNumberRange {
  BrainNumberType type = 1;
  BrainNumber minimum = 2;
  BrainNumber maximum = 3;
  bool include_minimum = 4;  // true[x >= minimum]
  bool include_maximum = 5; // true[x <= maximum]
}

message BrainNumberBasket {
  oneof number_basket_is_one_of {
    BrainS32Set s32 = 1;
    BrainU32Set u32 = 2;
    BrainF32Set f32 = 3;
    BrainS64Set s64 = 4;
    BrainU32Set u64 = 5;
    BrainF64Set f64 = 6;
  }
}

enum BrainNumberBagType{
  // key = S32
  BRAIN_NUMBER_BAG_S32_S32 = 0;
  BRAIN_NUMBER_BAG_S32_U32 = 1;
  BRAIN_NUMBER_BAG_S32_F32 = 2;
  BRAIN_NUMBER_BAG_S32_S64 = 3;
  BRAIN_NUMBER_BAG_S32_U64 = 4;
  BRAIN_NUMBER_BAG_S32_F64 = 5;

  // key = U32
  BRAIN_NUMBER_BAG_U32_S32 = 6;
  BRAIN_NUMBER_BAG_U32_U32 = 7;
  BRAIN_NUMBER_BAG_U32_F32 = 8;
  BRAIN_NUMBER_BAG_U32_S64 = 9;
  BRAIN_NUMBER_BAG_U32_U64 = 10;
  BRAIN_NUMBER_BAG_U32_F64 = 11;

  // key = F32
  BRAIN_NUMBER_BAG_F32_S32 = 12;
  BRAIN_NUMBER_BAG_F32_U32 = 13;
  BRAIN_NUMBER_BAG_F32_F32 = 14;
  BRAIN_NUMBER_BAG_F32_S64 = 15;
  BRAIN_NUMBER_BAG_F32_U64 = 16;
  BRAIN_NUMBER_BAG_F32_F64 = 17;

  // key = S64
  BRAIN_NUMBER_BAG_S64_S32 = 18;
  BRAIN_NUMBER_BAG_S64_U32 = 19;
  BRAIN_NUMBER_BAG_S64_F32 = 20;
  BRAIN_NUMBER_BAG_S64_S64 = 21;
  BRAIN_NUMBER_BAG_S64_U64 = 22;
  BRAIN_NUMBER_BAG_S64_F64 = 23;

  // key = U64
  BRAIN_NUMBER_BAG_U64_S32 = 24;
  BRAIN_NUMBER_BAG_U64_U32 = 25;
  BRAIN_NUMBER_BAG_U64_F32 = 26;
  BRAIN_NUMBER_BAG_U64_S64 = 27;
  BRAIN_NUMBER_BAG_U64_U64 = 28;
  BRAIN_NUMBER_BAG_U64_F64 = 29;

  // key = F64
  BRAIN_NUMBER_BAG_F64_S32 = 30;
  BRAIN_NUMBER_BAG_F64_U32 = 31;
  BRAIN_NUMBER_BAG_F64_F32 = 32;
  BRAIN_NUMBER_BAG_F64_S64 = 33;
  BRAIN_NUMBER_BAG_F64_U64 = 34;
  BRAIN_NUMBER_BAG_F64_F64 = 35;
}

/*
message BrainNumberBag {
  oneof number_bag_is_one_of {
    // Key = U32
    BrainMapU32S32 u32_s32 = 1;
    BrainMapU32U32 u32_u32 = 2;
    BrainMapU32F32 u32_f32 = 3;
    BrainMapU32S64 u32_s64 = 4;
    BrainMapU32U64 u32_u64 = 5;
    BrainMapU32F64 u32_f64 = 6;

    // Key = S32
    BrainMapS32S32 s32_s32 = 7;
    BrainMapS32U32 s32_u32 = 8;
    BrainMapS32F32 s32_f32 = 9;
    BrainMapS32S64 s32_s64 = 10;
    BrainMapS32U64 s32_u64 = 11;
    BrainMapS32F64 s32_f64 = 12;

    // Key = F32
    BrainMapF32S32 f32_s32 = 13;
    BrainMapF32U32 f32_u32 = 14;
    BrainMapF32F32 f32_f32 = 15;
    BrainMapF32S64 f32_s64 = 16;
    BrainMapF32U64 f32_u64 = 17;
    BrainMapF32F64 f32_f64 = 18;

    // Key = S64
    BrainMapS64S32 s64_s32 = 19;
    BrainMapS64U32 s64_u32 = 20;
    BrainMapS64F32 s64_f32 = 21;
    BrainMapS64S64 s64_s64 = 22;
    BrainMapS64U64 s64_u64 = 23;
    BrainMapS64F64 s64_f64 = 24;

    // Key = U64
    BrainMapU64S32 u64_s32 = 25;
    BrainMapU64U32 u64_u32 = 26;
    BrainMapU64F32 u64_f32 = 27;
    BrainMapU64S64 u64_s64 = 28;
    BrainMapU64U64 u64_u64 = 29;
    BrainMapU64F64 u64_f64 = 30;

    // Key = F64
    BrainMapF64S32 f64_s32 = 31;
    BrainMapF64U32 f64_u32 = 32;
    BrainMapF64F32 f64_f32 = 33;
    BrainMapF64S64 f64_s64 = 34;
    BrainMapF64U64 f64_u64 = 35;
    BrainMapF64F64 f64_f64 = 36;
  }
}
*///todo

message BrainNumberSeries
{
  uint32 length = 1;  // if present, the Series has to be this size.
  // TODO: consider moving length to schema
  oneof number_series_is_one_of {
    BrainS32Vector s32 = 5;
    BrainU32Vector u32 = 6;
    BrainF32Vector f32 = 7;
    BrainS64Vector s64 = 8;
    BrainU64Vector u64 = 9;
    BrainF64Vector f64 = 10;
  }
}

message BrainNumberSparseSeries {
  uint32 max_index = 1;
  oneof number_sparse_series_is_one_of {
    BrainS32SparseVector s32 = 2;
    BrainU32SparseVector u32 = 3;
    BrainF32SparseVector f32 = 4;
    BrainS64SparseVector s64 = 5;
    BrainU64SparseVector u64 = 6;
    BrainF64SparseVector f64 = 7;

  }
}

message BrainNumberTable{
  uint32 num_rows = 1;
  uint32 num_cols = 2;
  oneof number_table_is_one_of {
    BrainS32Matrix s32 = 3;
    BrainU32Matrix u32 = 4;
    BrainF32Matrix f32 = 5;
    BrainS64Matrix s64 = 6;
    BrainU64Matrix u64 = 7;
    BrainF64Matrix f64 = 8;
  }
}

message BrainNumberSparseTable {
  uint32 num_rows = 1;
  uint32 num_cols = 2;
  oneof number_sparse_table_is_one_of {
    BrainS32SparseMatrix s32 = 3;
    BrainU32SparseMatrix u32 = 4;
    BrainF32SparseMatrix f32 = 5;
    BrainS64SparseMatrix s64 = 6;
    BrainU64SparseMatrix u64 = 7;
    BrainF64SparseMatrix f64 = 8;
  }
}


