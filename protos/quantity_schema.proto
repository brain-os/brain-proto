syntax = "proto3";

package com.jio.brain;

option java_multiple_files = true;

import "dictionary.proto";
import "index.proto";
import "misc.proto";
import "quantity.proto";

message BrainQuantitySchemaDictionary {
  string vertical = 1;
  map<string, BrainIndex> dictionary = 2;
  map<string, BrainQuantitySchema> quantity = 3;
  // key = quantity-name
}

message BrainQuantitySchema {
  string name = 1;  // e.g. “length”
  string unit = 2; // comes from BrainQuantityUnit (depending on name)
  string type = 3; // // e.g. numeric, range, series, distribution, ...
  oneof quantity_schema {
    BrainNumericQuantitySchema numeric = 4;
    BrainOrdinalQuantitySchema ordinal = 5;
    BrainSymbolicQuantitySchema symbolic = 6;
    BrainRangeQuantitySchema range =	7; // (min, max)
    BrainSeriesQuantitySchema series = 8;		// x_1, x_2, … x_n
    BrainDistributionQuantitySchema distribution = 9; // p(s_1), p(s_2), …, p(s_n)
    BrainBasketQuantitySchema basket = 10;		// {s_1, s_2, …, s_k}
    BrainBagQuantitySchema bag = 11;			// {(w_1, s_1), (w_2, s_2), …}
    BrainSequenceQuantitySchema sequence = 12;  // (s_1, s_2, …, s_k)
    BrainBinnedQuantitySchema binned = 13; // bin from a set of bins
    BrainSpatialQuantitySchema spatial = 14; // latlong, village, city, ...
    BrainTemporalQuantitySchema temporal = 15; // instance, range, duration
  }
}

message BrainNumericQuantitySchema {
  BrainNumericQuantity minimum = 1;
  BrainNumericQuantity maximum = 2;
  bool include_minimum = 3;
  bool include_maximum = 4;

}

message BrainOrdinalQuantitySchema {
  BrainIndex dictionary = 1;
}

message BrainSymbolicQuantitySchema {
  BrainDictionarySchema dictionary = 1;
}

message BrainRangeQuantitySchema {
  BrainNumericQuantity minimum = 1;
  BrainNumericQuantity maximum = 2;
  bool include_minimum = 3;
  bool include_maximum = 4;
}

message BrainSeriesQuantitySchema {
  string y_uint = 1;
  string x_unit = 2;
  BrainNumericQuantity xmin = 3;
  BrainNumericQuantity xmax = 4;
  BrainNumericQuantity xstep = 5;
}

message BrainDistributionQuantitySchema {
  BrainDictionarySchema dictionary = 1;
}

message BrainBasketQuantitySchema {
  BrainDictionarySchema dictionary = 1;
}

message BrainBagQuantitySchema {
  BrainDictionarySchema dictionary = 1;
}

message BrainSequenceQuantitySchema {
  BrainDictionarySchema dictionary = 1;
}

message BrainBinnedQuantitySchema {
  string source = 1;
  BrainDictionarySchema dictionary = 2;
  repeated float boundary = 3;
  bool minimum_open = 4;
  bool maximum_open = 5;
}

message BrainSpatialQuantitySchema {
  BrainHierarchySchema hierarchy = 1;
}

message BrainHierarchySchema {

}

message BrainTemporalQuantitySchema {
  oneof temporal_schema_is_one_of {
    BrainTemporalInstanceQuantitySchema instance = 1; // which
    BrainTemporalDurationQuantitySchema duration = 2; // how man
    BrainTemporalRangeQuantitySchema range = 3;       // from to to
  }
}

message BrainTemporalInstanceQuantitySchema {
  map<string, uint32> selected = 1;
  // These come from the temporal_types above
}

message BrainTemporalDurationQuantitySchema {
  map<string, uint32> selected = 1;
}

message BrainTemporalRangeQuantitySchema {
  map<string, uint32> selected = 1;
  bool include_minimum = 2; // <= vs. <
  bool include_maximum = 3;  //>= vs. >
}

enum QuantityUnit {
  NOT_APPLICABLE = 0;
  LENGTH_CM = 1;
  LENGTH_METER = 2;
  LENGTH_KM = 3;
  WEIGHT_MG = 4;
  WEIGHT_GRAMS = 5;
  WEIGHT_KG = 6;
  TEMPERATURE_CELSIUS = 7;
  TEMPERATURE_FAHRENHEIT = 8;
  TIME_MILLISECOND = 9;
  TIME_SECOND = 10;
  TIME_YEARS = 11;
  TIME_EPOCH = 12;
  DECIBEL = 13;
  MONETARY_INR = 14;
  PERCENT = 15;
}
