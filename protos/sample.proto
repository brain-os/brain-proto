syntax = "proto3";

package com.jio.fabric;

option java_multiple_files = true;

import "google/protobuf/any.proto";

message BrainList {
  repeated string item = 1;
}

message BrainIdentity {
  // UI Assigned during creation
  string vertical = 1; // common, telecom, retail (UI Assigned OR Inherited from parent)
  // UI Assigned during creation : event, property, context, entity, attribute, attribute_qualifier, predicates, predicate_qualifier, dictionary, dictionary_constant, quantity_type
  string type = 2;
  string name = 3; // human readable name (Available on UI)
  // Some building blocks have parents. for dictionary_constant => dictionary, attribute => entity, attribute_qualifier => attribute, context & property => event
  uint64 parent_index = 4; // Empty OR index of parent of this identity - see below
  // for unusual situation of hashcode collision - suffix to key
  string hashcode_collision_suffix = 5; // AUTO GENERATED if
  // Event : /retail/event/pos OR /telecom/event/lsr
  // Property : /retail/property/pos/transaction_time OR /telecom/property/call/duration
  // Context : /retail/context/pos/day_hours (morning, afternoon, evening, night) OR /telecom/context/call/caller_location (home, office, transit, other)
  // Entity : /retail/entity/product OR /telecom/entity/tower
  // Attribute : /retail/attribute/product/product_category OR /telecom/entity/tower/azimuth_angle
  // Attribute Qualifier : /retail/attribute_qualifier/product/discount/end_date OR /telecom/attribute_qualifier/tower/azimuth_angle/last_changed
  // Predicates : /commons/predicate/person/mayor_of/city
  // Predicate Qualifier : /commons/predicate_qualifier/person/mayor_of/city/start_date
  // Dictionary : /common/dictionary/global/city - reference to entities OR /retail/dictionary/local/shirt_size
  // Dictionary Constant : /retail/dictionary_constant/shirt_size/large
  string key = 6; // AUTO GENERATED - <vertical>/<type>/<optional-sub-type....>/<name> (Available on UI for view)
  uint32 index = 8; // hashcode of "key"
  // 1-4 byte -> not used, 5-8 -> vertical code, 9-12 -> type-code, 33-64 -> hashcode of key
  //                           XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX
  //                           --byte1--   --byte2--   --byte3--   --byte4--   --byte5--   --byte6--   --byte7--   --byte8--
  // Not Used (First 4 bits)   0000 XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX
  // Vertical Code (5-8 bits)  XXXX 0000   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX
  // Type Code (9-12 bits)     XXXX XXXX   0000 XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX
  // Hashcode Collision bits   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX 0000   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX
  // Hashcode of generated key XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   XXXX XXXX   0000 0000   0000 0000   0000 0000
  uint64 long_index = 7; // MACHINE GENERATED (Remain Constant thru out) - Used Internally by stores
}

message BrainIdentityList {
  repeated BrainIdentity item = 1;
}

message BrainStore {
  BrainIdentityList entity = 1;
  BrainIdentityList property = 2;
  BrainIdentityList context = 3;
}
message BrainEntity {
  BrainIdentityList attribute = 1;
  BrainIdentityList attribute_qualifier = 2;
  BrainIdentityList predicate = 3;
  BrainIdentityList predicate_qualifier = 4;
}

message BrainMetadataDictionary {
  map<string, BrainMetadata> keyMap = 1;
  map<uint64, BrainMetadata> indexMap = 2;
}

message BrainMetadata {
  BrainIdentity identity = 1;
  BrainIdentityList item_list = 2; // constraint -> same type in all list
}

message BrainQuantityConfig {
  BrainIdentity identity = 1;
  // oneof numeric, symbolic,
}

message BrainQuantity {
  // oneof numeric, symbolic
}

message BrainQuantityConfigDictionary {
  map<string, BrainQuantityConfig> keyMap = 1;
  map<uint64, BrainQuantityConfig> indexMap = 2;
}

message BrainSymbolicQuantity {
  uint64 index = 1;
}

message BrainSymbolicQuantityConfig {
  BrainIdentity identity = 1;
  oneof symbol {
    BrainIdentity metadata = 2; // identity of metadata
    BrainIdentityList item = 3; // list of items
  }
}

message BrainEventConfig {
  BrainIdentity identity = 1;
  BrainStoreConfig key_store = 2;
  BrainStoreConfig value_store = 3;
}

message BrainStoreConfig {
  BrainIdentityList entity = 1;
  map<string, BrainQuantityConfig> property = 2; // key => key in brain index of property
  map<string, BrainQuantityConfig>  context = 3;
}

message BrainEntityConfig {
  BrainIdentity identity = 1;
  map<string, BrainQuantityConfig> attribute = 2;
  map<string, BrainQuantityConfig> attribute_qualifier = 3;
  map<string, BrainIdentity> predicates = 4;
  map<string, BrainQuantityConfig> predicate_qualifier = 5;
}

message BrainEvent {
  uint64 identity_index = 1;
  string event_id = 2;
  BrainEntityStore key_store = 3;
  BrainEntityStore value_store = 4;
}

message BrainStore {
  map<uint64, BrainList> entity = 1;
  map<uint64, BrainQuantity> property = 2;
  map<uint64, BrainQuantity> context = 3;
  map<string, BrainEntityStore> entity_store = 4;
  map<uint64, BrainQuantity> predicate_qualifier = 6;
}

message BrainEntityStore {
  map<uint64, BrainQuantity> attribute = 3;
  map<uint64, BrainQuantity> attribute_qualifier = 4;
}

/*
quantity-type => /commons/quantity/temporal/instant
{
  "identity" : {
    "type" : "/commons/quantity/temporal/instant",
    "index" : 27632736 // TODO - We dont need this
  },
  "unit" : "na",
  "temporal" : {// more fields}
}

property
{
  "identity" : {
    "type" : "/commons/property/invoice/start_date",
    "index" : 23213
  }
}

// BrainStoreConfig
{
  "/commons/property/invoice/start_date" : "/commons/quantity/temporal/instant",
  "/commons/property/invoice/end_date" : "/commons/quantity/temporal/instant"
}

// BrainStore
{
  23213 : <quantity-value>
}

Purpose - Debugging and Machine Learning Features

common/dictionary/all-colors (red, green, blue, yellow, white, black)
common/dictionary/primary-color - (red, green, blue)
common/dictionary/product-color - (green, blue, yellow...)

Event 1
common/entity/customer - 9348

Event 2
common/entity/customer - 9348

Context 1
 */

