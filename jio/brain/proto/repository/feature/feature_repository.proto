syntax = "proto3";

package jio.brain.proto.repository.feature;

option java_package = "com.jio.brain.proto.repository.feature";
option java_multiple_files = true;

import "jio/brain/proto/base/enums.proto";
import "google/protobuf/timestamp.proto";
import "jio/brain/proto/entity/entity.proto";
import "jio/brain/proto/quantity/quantity.proto";
import "jio/brain/proto/event/event.proto";
import "jio/brain/proto/quantity/quantity_temporal.proto";
import "jio/brain/proto/base/status.proto";

message FeatureCommand {
  oneof command_is_one_of {
    FeatureCreateCommand create = 1;
    FeatureUpdateCommand update = 2; // TODO do we need it
    FeatureDeleteCommand delete = 3;
  }
}
message FeatureCreateCommand {
  uint32 event_schema = 1; // for structure of brain_event_key
  google.protobuf.Timestamp window_time = 2; // get from brain event meta data
  jio.brain.proto.event.BrainEventKey event_key = 3; // get from brain event // at a common place brain event key entities in ascending order , uint64
  map<uint32, jio.brain.proto.quantity.BrainQuantity> feature_set = 4;
  jio.brain.proto.base.BrainTimeWindowType window_time_type = 5;
  // todo do we need atomic quantity here??
  // todo brand profile
  // todo recommendation engine
  // todo time series
}
message FeatureUpdateCommand {
  google.protobuf.Timestamp window_time = 1; // get from brain event meta data
  jio.brain.proto.event.BrainEventKey event_key = 2; // get from brain event
  map<uint32, jio.brain.proto.quantity.BrainQuantity> feature_set = 3;
}
message FeatureDeleteCommand {
  jio.brain.proto.event.BrainEventKey event_key = 1;
  repeated uint32 id_set = 2;
}

message FeatureCrudRequest {
    FeatureCommand command = 1;
}
message FeatureCrudResponse {
  jio.brain.proto.base.BrainStatus brainStatus = 1;
}

service FeatureLakeService {
  rpc generate_key(FeatureKeyRequest) returns (FeatureKeyResponse); // convert to sha256
  rpc key_components(FeatureKeyComponentsRequest) returns (FeatureKeyComponentResponse);
  rpc create(FeatureCrudRequest) returns (FeatureCrudResponse);
  rpc get(FeatureGetRequest) returns (FeatureGetResponse);
  rpc getFeatureList(MultipleFeatureGetRequest) returns (MultipleFeatureGetResponse);
}
message MultipleFeatureGetRequest {
  string feature_key = 1;
  repeated uint32 feature_name_set = 2;
  jio.brain.proto.base.BrainTimeWindowType window_time_type = 3;
  google.protobuf.Timestamp window_start_time = 4;
  google.protobuf.Timestamp window_end_time = 5;
  int32 count = 6;
}

//If no Window Time Consider Latest table
message FeatureGetRequest {
  string brain_key = 1;
  uint32 feature_key = 2;
  jio.brain.proto.base.BrainTimeWindowType window_time_type = 3;
}

//message FeatureGetTimeSeriesRequest {
//  string brain_key = 1;
//   uint32 feature_key = 2;
//
//}
//
//message FeatureGetRangeTimeSeriesRequest {
//  string brain_key = 1;
//  uint32 feature_key = 2;
//
//}
//
//message FeatureGetCountRequest {
//  string brain_key = 1;
//  uint32 feature_key = 2;
//
//}
message FeatureValue{
  jio.brain.proto.quantity.BrainQuantity feature_value = 2;
}
message FeatureGetResponse {
    uint32 feature_set = 1;
    repeated jio.brain.proto.quantity.BrainQuantity feature_values = 2;
    google.protobuf.Timestamp window_time = 3;
    jio.brain.proto.base.BrainStatus brainStatus = 4;
}

message MultipleFeatureGetResponse {
  repeated FeaturesData feature_values = 1;
  jio.brain.proto.base.BrainStatus brainStatus = 2;
}

message FeaturesData {
  uint32 feature_key = 1;
  repeated FeatureTimeSeriesValue feature_time_series_values = 2;
}

message FeatureTimeSeriesValue {
  google.protobuf.Timestamp window_time = 1;
  jio.brain.proto.quantity.BrainQuantity feature_value = 2;
}

message FeatureKeyRequest {
  jio.brain.proto.event.BrainEventKey event_key = 1;
}
message FeatureKeyResponse {
  string feature_key = 1;
  jio.brain.proto.base.BrainStatus brainStatus = 2;
}
message FeatureKeyComponentsRequest {
  string feature_key = 1;
}
message FeatureKeyComponentResponse {
  jio.brain.proto.event.BrainEventKey event_key = 1;
  jio.brain.proto.base.BrainStatus brainStatus = 2;
}