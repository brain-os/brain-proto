syntax = "proto3";

package jio.brain.proto.model;

import "jio/brain/proto/model/common_messages.proto";
import "jio/brain/proto/model/model_enums.proto";

option java_package = "com.jio.brain.proto.model";
option java_outer_classname = "ModelInputTransformationProto";
option java_multiple_files = true;



/**
 * Encapsulates the Transformation Logic of Standard API Inputs
 * to the input that a Model expects.
 *
 * All models hosted on AIX should accept input in the form of
 * either an array or a Table. Anything else is not yet supported
 * 
 * Therefore this mpaping allows transforming the API's input fields
 * into an array or a table only. Any of the two can be set. 
 */
message StandardApiInputToModelInputTransformation {
    oneof input_transformation_is_oneof {
        ApiToArrayTransformation            array_based_input_transformation                = 1;        // For models that accept an array as input
        ApiToTabularFormatTransformation    tabluar_input_transformation                    = 2;        // For models that accept a table as input (with one or multiple rows)
    }
}



        // ----------------------------------------------------------------- //
        //         Transformations for Model that accept an Array
        // ----------------------------------------------------------------- //



/**
 * This class represents information to be stored for models 
 * that accept an Array. 
 */
message ApiToArrayTransformation {
                jio.brain.proto.model.ApiFieldType          array_type                      = 1;        // The type of Array needed by the model
    repeated    ArrayElementTransformation                  input_field_mapping             = 2;        // An Array of Mappings to define how would the array elements be populated
}


/**
 * Transformation required to populate one particular index of an
 * array required by the model.
 *
 * The value of the index can come from the standard API Input field
 * OR can also be a fixed constant. 
 */
message ArrayElementTransformation {
    uint32                      array_index                     = 1;    // The array index for which this transformation is applicable
    FieldOrConstantValue        mapped_to                       = 2;
}




        // ----------------------------------------------------------------- //
        //      Transformations for Model that accept Tabular Data
        // ----------------------------------------------------------------- //




/**
 * This message represents information to be stored for transforming API inputs
 * into Tabular form (where one input will correspond to one row of the table) 
 * and different attributes of the input will correspond to the columns. 
 */
message ApiToTabularFormatTransformation {
    oneof  transformations_are_one_of {
            NamedColumnarTransformations        named_column_transformations    = 2;
            IndexedColumnarTransformations      indexed_column_transformations  = 3;
    }
}


message NamedColumnarTransformations {
    repeated NamedColumnarTransformation     transformations        = 1;
}

message NamedColumnarTransformation {
    string                      column_name                     = 1;
    FieldOrConstantValue        mapped_to                       = 2;
}



message IndexedColumnarTransformations {
    repeated IndexedColumnarTransformation  transformations         = 1;
}


message IndexedColumnarTransformation {
    uint32                      column_index                    = 1;
    FieldOrConstantValue        mapped_to                       = 2;
}
