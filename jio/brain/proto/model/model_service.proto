syntax = "proto3";

package jio.brain.proto.model;

import "jio/brain/proto/model/author.proto";
import "jio/brain/proto/model/api_definition.proto";
import "jio/brain/proto/model/api_definition_field_values.proto";
import "jio/brain/proto/base/status.proto";
import "jio/brain/proto/stores/article_store.proto";
import "jio/brain/proto/model/model.proto";
import "jio/brain/proto/model/model_input_transformations.proto";
import "jio/brain/proto/model/model_output_transformations.proto";
import "jio/brain/proto/model/model_preprocessor.proto";
import "google/protobuf/wrappers.proto";

option java_package = "com.jio.brain.proto.model";
option java_outer_classname = "ModelServiceProto";
option java_multiple_files = true;





// --------------------------------------------------------------- //
//                             Service
// --------------------------------------------------------------- //




/**
 * Service providing mechanisms to store and retrive information about
 * a Model.
 */
service ModelRepositoryService {
    
    /**
     * Creates a new Model against a given API authored by the supplied
     * author. Successful invocation of this API results in a Model Group
     * getting created with a single version in it. 
     *
     * 
     * Possible BrainStatusInstance on Errors
     *  - BRAIN_STATUS_CODE_ALREADY_EXIST, {"model_group_id_ext" : <> }
     *  - BRAIN_STATUS_CODE_API_AUTHOR_NOT_FOUND, {"author_id" : <> }
     *  - BRAIN_STATUS_CODE_API_DEFINITION_NOT_FOUND, {"api_id": <>}
     *  - BRAIN_STATUS_CODE_MODEL_INCOMPLETE_MODEL_INFO, {"prog_language": <>, "prog_language_version": <>, }
     *  - BRAIN_STATUS_CODE_MODEL_DEPENDENCY_NOT_FOUND {"module_dependency_name": <>, "module_dependency_version": <>, "module_package_manager": <>, "module_repo_name": <> }
     *  - BRAIN_STATUS_CODE_MODEL_FILE_NOT_FOUND, {"article_id": <>}
     *  - TODO: Add More
     */
    rpc createNewModel (CreateModelRequest) returns (ModelGroupHolder);



    /**
     * Adds a New Version to the given Model. If added successfully, the
     *  will return 
     * 
     * Possible BrainStatusInstance on Errors
     *  - BRAIN_STATUS_CODE_DOES_NOT_EXIST, {"model_group_id_ext" : <> , "model_group_id": <>}
     *  - BRAIN_STATUS_CODE_MODEL_FILE_NOT_FOUND, {"article_id": <>}
     *  - TODO: Add More
     */
    rpc addNewVersion (AddModelVersionRequest) returns (google.protobuf.UInt32Value);


    /**
     * Fetch Model Groups that match one or more criteria defined in the search
     * requests. The Information returned will contain Group along with Variant
     * information. The version information will be populated only if the request
     * instructs to do so. 
     */
    rpc getModelGroupList (SearchModelGroupRequest) returns (ModelGroupListHolder);


    /**
     * Gets the State of the model version identified by the request
     * 
     * Possible BrainStatusInstance on Errors
     *  - BRAIN_STATUS_CODE_DOES_NOT_EXIST, {"model_group_id_ext" : <> , "model_group_id": <>, "model_version": <>}
     */
    rpc getModelVersionStateInformation (GetModelVersionStateRequest) returns (ModelVersionStateHolder);




    /**
     * Gets the Events of the model version identified by the request. The returned
     * events will be sorted in reverse chronological manner (latest -> oldest). 
     * 
     * If model_version is not specified, then the entire history of Model Group
     * is returned. 
     * 
     * Possible BrainStatusInstance on Errors
     *  - BRAIN_STATUS_CODE_DOES_NOT_EXIST, {"model_group_id_ext" : <> , "model_group_id": <>, "model_version": <>}
     */
    rpc getModelVersionEvents (GetModelVersionEventsRequest) returns (ModelVersionEventsHolder);



    /**
     * Method to request transition of state of a Model Version
     *
     * Possible BrainStatusInstance on Errors
     *  - BRAIN_STATUS_CODE_DOES_NOT_EXIST, {"model_group_id_ext" : <> , "model_group_id": <>, "model_version": <>}
     *  - BRAIN_STATUS_CODE_MODEL_VERSION_STATE_CHANGE_NOT_ALLOWED, {"desired_state": <>, "current_state": <>}
     */
    rpc transitionStateForModelVersion (ModelVersionStateTransitionRequest) returns (google.protobuf.BoolValue);
}






// --------------------------------------------------------------- //
//                  Request & Response Messages
// --------------------------------------------------------------- //



message CreateModelRequest {
                string                                                  model_group_id_ext              = 1;        // /.../models/author-id-1/SentimentAnalysis/scikit/132
                jio.brain.proto.model.ModelAuthorIdentity               author_id                       = 2;        // The Author of the Model
                jio.brain.proto.model.ApiDefinitionIdentity             api_id                          = 3;        // The API of which this model is a solution of
                string                                                  mg_name                         = 4;        // Unique Name within an Author's Implementations of API
                string                                                  mg_description                  = 5;        // A brief description (possibly containing approach followed)

                string                                                  mv_name                         = 6;        // Not Required if have 1:1 relationship b/w ModelGroup & ModelVariant
                ModelInformation                                        model_info                      = 7;        // TODO: Think of a better name
                StandardApiInputToModelInputTransformation              input_transformation            = 8;    
                ModelOutputToStandardApiOutputTransformation            output_transformation           = 9;
                PricingRange                                            pricing_range                   = 10;
    repeated    ApiFieldNameAndValue                                    configurational_parameters      = 11;       // Values of various Configuration Parameters associated with the API Definition
                ModelPreprocessor                                       preprocessor                    = 12;       

                jio.brain.proto.stores.PersistentArticleIdAndMetadata   model_version_article_info      = 13;       // Represents the Pointer to the original Model File 
}




message ModelGroupIdentity {
    oneof id_oneof {
        uint32      model_group_id           = 1;
        string      model_group_id_ext       = 2;
    }
}



message AddModelVersionRequest {
    ModelGroupIdentity                                      model_group_id                  = 1;
    string                                                  change_note                     = 2;
    jio.brain.proto.stores.PersistentArticleIdAndMetadata   model_version_article_info      = 3;
}



message SearchModelGroupRequest {
    jio.brain.proto.model.ModelAuthorIdentity               author_id                       = 1;
    jio.brain.proto.model.ApiDefinitionIdentity             api_id                          = 2;
    bool                                                    include_model_versions          = 3;    // if set to false, then model_versions won't be populated
}

message GetModelVersionStateRequest {
    ModelGroupIdentity      model_group_id                  = 1;
    uint32                  model_version                   = 2;
}


message GetModelVersionEventsRequest {
    ModelGroupIdentity      model_group_id                  = 1;
    uint32                  model_version                   = 2;
}

message ModelVersionStateTransitionRequest {
    ModelGroupIdentity      model_group_id                  = 1;
    uint32                  model_version                   = 2;
    ModelVersionState       desired_state                   = 3;
}

message ModelVersionEventsHolder {
                jio.brain.proto.base.BrainStatus        status              = 1;
    repeated    ModelVersionStateChangeEvent            events              = 2;
}

message ModelVersionStateHolder {
    jio.brain.proto.base.BrainStatus        status              = 1;
    ModelVersionState                       state               = 2;
}

message ModelGroupListHolder {
                jio.brain.proto.base.BrainStatus        status              = 1;
    repeated    ModelGroup                              model_groups        = 2;
}

message ModelGroupHolder {
    jio.brain.proto.base.BrainStatus        status          = 1;
    ModelGroup                              model_group     = 2;    
}
