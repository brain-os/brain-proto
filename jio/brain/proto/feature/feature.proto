syntax = "proto3";

package jio.brain.proto.feature;

option java_package = "com.jio.brain.proto.feature.schema";
option java_multiple_files = true;

import "jio/brain/proto/base/status.proto";
import "jio/brain/proto/base/enums.proto";
import "jio/brain/proto/base/token.proto";
import "jio/brain/proto/quantity/quantity.proto";
import "google/protobuf/any.proto";

message BrainFeature {
  uint32 feature_id = 1;
  jio.brain.proto.quantity.BrainQuantity value = 2;
}
message BrainFeatureSchema {
  jio.brain.proto.base.BrainToken token = 1;
  jio.brain.proto.quantity.BrainQuantitySchema quantity = 2;
//  bool is_time_series = 3; NOT NEEDED - All features with have time aspect
  jio.brain.proto.base.BrainTimeWindowType time_window = 3;
  optional jio.brain.proto.base.BrainToken unit = 4;
}
message BrainFeatureSetStoreSchema {
  map<string, BrainFeatureSchema> feature_set = 1;
}
message BrainFeatureStore {
  map<uint32, BrainFeature> features = 1;
}
// Independently manage grouping of features
message BrainFeatureFamilySchema {
  jio.brain.proto.base.BrainToken token = 1;
  repeated jio.brain.proto.base.BrainToken feature_set = 2;
}

service FeatureMetadataService {
  rpc serve(FeatureMetadataRequest) returns (FeatureMetadataResponse) {}
}
message FeatureMetadataRequest {
  uint32 feature_id = 1;
}

message FeatureMetadataResponse {
  jio.brain.proto.base.BrainStatus status = 1;
  repeated uint32 function_set = 2;
}
