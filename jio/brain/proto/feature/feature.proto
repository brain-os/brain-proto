syntax = "proto3";

package jio.brain.proto.feature;

option java_package = "com.jio.brain.proto.feature.schema";
option java_multiple_files = true;

import "jio/brain/proto/base/enums.proto";
import "jio/brain/proto/base/token.proto";
import "jio/brain/proto/quantity/quantity.proto";
import "google/protobuf/timestamp.proto";
import "jio/brain/proto/event/event_common.proto";

// IMPORTANT - Feature lake will extract Features from BrainEvent (BrainKeyValueBrain and BrainTransactionEvent)
// There is mapping needed in feature lake

// hourly throughput of cell - Result of Aggregation DAG - in that case it is numeric quantity
// SPO2 level of blood sugar of patient

// for event this key should not be populated.

message BrainFeature {
  uint32 id = 1; // which feature?
  jio.brain.proto.event.BrainRecordKey record_key = 2; // optional brain id of feature - e.g. "/telecom/feature/call_experience/hourly" <=> 1234, "/healthcare/patient/heart_beat_rate" <=> 5748
  jio.brain.proto.quantity.BrainQuantity quantity = 3;
  google.protobuf.Timestamp created_time = 4;
}

message BrainFeatureSchema {
  jio.brain.proto.base.BrainToken token = 1;
  jio.brain.proto.event.BrainRecordKeySchema record_key = 2;
  jio.brain.proto.quantity.BrainQuantitySchema quantity = 3;
  jio.brain.proto.base.BrainTimeWindowType time_window = 4;
}


message BrainFeatureFamilySchema {
  jio.brain.proto.base.BrainToken token = 1;
  repeated string feature_set = 2;
}
message BrainFeatureSetSchema { // TODO
  map<string, BrainFeatureSchema> feature_set = 1; //string --> Key Token to be used
  map<uint32,BrainFeatureFamilySchema>  feature_family_set = 2; // TODO
}
message BrainFeatureSet {
  map<uint32, jio.brain.proto.quantity.BrainQuantity> value = 1;
}

