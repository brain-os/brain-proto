syntax = "proto3";

package jio.brain.proto.event;

option java_package = "com.jio.brain.proto.event";
option java_multiple_files = true;

import "google/protobuf/timestamp.proto";
import "jio/brain/proto/quantity/quantity.proto";
import "jio/brain/proto/event/event.proto";
import "jio/brain/proto/event/event_common.proto";
import "jio/brain/proto/event/inference_lake.proto";
import "jio/brain/proto/base/status.proto";

message InferenceCommand {
  oneof command_is_one_of {
    InferenceCreateCommand create = 1;
    InferenceUpdateCommand update = 2; // TODO - NOT USED CURRENTLY - In future
    InferenceDeleteCommand delete = 3; // TODO - NOT USED CURRENTLY - In future
  }
}

message InferenceCreateCommand {
  jio.brain.proto.event.BrainInferenceRepositoryEvent brain_inference_event = 1;   // of type Inference_key_value
  string sha256key = 2; //can be removed
  uint32 event_schema = 3;
  jio.brain.proto.base.BrainStatus brainStatus = 4;
}

/**
  TODO - NOT USED
 */
message InferenceUpdateCommand {
  google.protobuf.Timestamp window_time = 1; // get from brain event meta data
  jio.brain.proto.event.BrainEventKey event_key = 2; // get from brain event
  map<uint32, jio.brain.proto.quantity.BrainQuantity> inference_set = 3;
}

/**
  TODO - NOT USED
 */
message InferenceDeleteCommand {
  jio.brain.proto.event.BrainEventKey event_key = 1;
  repeated uint32 id_set = 2;
}

message InferenceCrudRequest {
  InferenceCommand command = 1;
}
message InferenceCrudResponse {
  jio.brain.proto.base.BrainStatus brainStatus = 1;
}

service InferenceLakeService {
  rpc generateShaKey(InferenceKeyRequest) returns (InferenceKeyResponse);
  rpc key_components(InferenceKeyComponentsRequest) returns (InferenceKeyComponentResponse);
  rpc crudRequest(InferenceCrudRequest) returns (InferenceCrudResponse);
  rpc getLatestInferenceValue(InferenceGetRequest) returns (InferenceGetResponse);
  rpc getInferencesForModel(InferencesForModelRequest) returns (InferencesForModelResponse);
}

message InferencesForModelRequest{
  string inference_key = 1;
  uint32 model_id = 2;
  google.protobuf.Timestamp created_time = 3;
}

message InferencesForModelResponse {
  map<uint32,jio.brain.proto.quantity.BrainQuantity> latest_inference_values = 1;
  jio.brain.proto.base.BrainStatus brainStatus = 2;
}

message InferenceGetRequest {
  string inference_key = 1;
  uint32 model_id = 2;
  repeated uint32 inference_id = 3;
  google.protobuf.Timestamp created_time = 4;
}

message InferenceValue{
 repeated jio.brain.proto.quantity.BrainQuantity inference_value = 2;
}

//latest only
message InferenceGetResponse {
    map<uint32,InferenceValue> latest_inference_values = 1;
    jio.brain.proto.base.BrainStatus brainStatus = 2;
}

message InferenceKeyRequest {
  jio.brain.proto.event.BrainRecordKey brain_record_key = 1;
}
message InferenceKeyResponse {
  string inference_key = 1;
  jio.brain.proto.base.BrainStatus brainStatus = 2;
}
message InferenceKeyComponentsRequest {
  string brain_sha_key = 1;
}
message InferenceKeyComponentResponse {
  jio.brain.proto.event.BrainRecordKey record_key = 1;
  jio.brain.proto.base.BrainStatus brainStatus = 2;
}

//message BrainEventKeyShaMapping {
//  string sha_key = 1;
//  jio.brain.proto.event.BrainEventKey event_key = 2;
//}