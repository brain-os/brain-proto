syntax = "proto3";

package jio.brain.proto.base;

option java_package = "com.jio.brain.proto.base";
option java_multiple_files = true;

enum BrainElementType {
    BRAIN_ELEMENT_UNKNOWN = 0;
    BRAIN_ELEMENT_NUMBER_S32 = 1;
    BRAIN_ELEMENT_NUMBER_U32 = 2;
    BRAIN_ELEMENT_NUMBER_F32 = 3;
    BRAIN_ELEMENT_NUMBER_S64 = 4;
    BRAIN_ELEMENT_NUMBER_U64 = 5;
    BRAIN_ELEMENT_NUMBER_F64 = 6;

    BRAIN_ELEMENT_SYMBOL_STR = 7;
    BRAIN_ELEMENT_SYMBOL_U32 = 8;
    BRAIN_ELEMENT_SYMBOL_U64 = 9;
    BRAIN_ELEMENT_SYMBOL_IDX = 10;

//    BRAIN_ELEMENT_QUANTITY //TODO
}
enum BrainQuantityType {
    BRAIN_UNKNOWN_QUANTITY   = 0;
    BRAIN_ATOMIC_QUANTITY   = 1;
    BRAIN_COMPOUND_QUANTITY	= 2;
    BRAIN_TEMPORAL_QUANTITY	= 3;
    BRAIN_SPATIAL_QUANTITY	= 4;
}
enum BrainNumberType {
    BRAIN_UNKNOWN_NUMBER = 0;
    BRAIN_S32_NUMBER = 1;	// signed integer 32bit
    BRAIN_U32_NUMBER = 2;	// unsigned integer 32bit
    BRAIN_F32_NUMBER = 3;	// signed float 32bit
    BRAIN_S64_NUMBER = 4;	// signed integer 64bit
    BRAIN_U64_NUMBER = 5;	// unsigned integer 64bit
    BRAIN_F64_NUMBER = 6;	// signed double 64bit
}
enum BrainSymbolType {
    BRAIN_UNKNOWN_SYMBOL = 0;
    BRAIN_STR_SYMBOL = 1;
   // BRAIN_TYPE_SYMBOL_I32 = 1;
    BRAIN_I64_SYMBOL = 2;
    BRAIN_IDX_SYMBOL = 3; // represent sequence
}
//
//enum BrainOrdinalType {
//    BRAIN_TYPE_ORDINAL_STR = 0;
//    BRAIN_TYPE_ORDINAL_IDX = 1;
//    //BRAIN_TYPE_ORDINAL_I64 = 2;
//}

enum BrainCollectionType {
    BRAIN_UNKNOWN_COLLECTION = 0;
    BRAIN_SYMBOL_COLLECTION = 1;
    BRAIN_ORDINAL_COLLECTION = 2;
    BRAIN_ENTITY_COLLECTION = 3;  // subset e.g. “tier-1-cities”
}
//enum BrainCollectionItemType {
//    BRAIN_COLLECTION_STR = 0;
//    BRAIN_COLLECTION_IDX = 1;
//    BRAIN_COLLECTION_I64 = 2;
//}
enum BrainTokenType {
    BRAIN_UNKNOWN_TOKEN = 0;
    BRAIN_COLLECTION_TOKEN = 1;
    BRAIN_QUANTITY_TOKEN = 2;
    BRAIN_UNIT_TOKEN = 3;
    BRAIN_CONTEXT_TOKEN = 4;
    BRAIN_PROPERTY_TOKEN = 5;
    BRAIN_ENTITY_TOKEN = 6;
    BRAIN_BIZ_TOKEN = 7;
    BRAIN_ATTRIBUTE_TOKEN = 8;
    BRAIN_ATTRIBUTE_QUALIFIER_TOKEN = 9;
    BRAIN_PREDICATE_TOKEN = 10;
    BRAIN_PREDICATE_QUALIFIER_TOKEN = 11;
    BRAIN_EVENT_TOKEN = 12;
    BRAIN_PROCESS_TOKEN = 13;
    BRAIN_FEATURE_TOKEN = 14;
    BRAIN_ATTRIBUTE_FAMILY_TOKEN = 15;
}

// Temporal
enum BrainDateInstanceType {
   // BRAIN_TYPE_DATE_INSTANCE_CENTURY = 0;// century
   // BRAIN_TYPE_DATE_INSTANCE_DECADE = 1;  // decade,century
  //  BRAIN_TYPE_DATE_INSTANCE_YEAR = 2;  // year (2021)
  //  BRAIN_TYPE_DATE_INSTANCE_QUARTER = 3; // quarter, year
  //  BRAIN_TYPE_DATE_INSTANCE_SEASON = 4; // season, year
  //  BRAIN_TYPE_DATE_INSTANCE_MONTH = 5;  // month, year
  //  BRAIN_TYPE_DATE_INSTANCE_WEEK = 6;    // week, year
    BRAIN_TYPE_DATE_INSTANCE_DATE = 0;    // day, month, year
}

enum BrainTimeInstanceType {
    BRAIN_TYPE_TIME_INSTANCE_TIME = 0;   //morning,evening….
//    BRAIN_TYPE_TIME_INSTANCE_PART = 0;   //morning,evening….
//    BRAIN_TYPE_TIME_INSTANCE_HOUR = 1;    //hour
//    BRAIN_TYPE_TIME_INSTANCE_QUARTER = 2;    //hh:q
//    BRAIN_TYPE_TIME_INSTANCE_MINUTE5 = 3;    //hh:m5
//    BRAIN_TYPE_TIME_INSTANCE_MINUTE = 4;    // hh:mm
//    BRAIN_TYPE_TIME_INSTANCE_SECOND = 5;    //hh:mm:ss
//    BRAIN_TYPE_TIME_INSTANCE_MILLISECOND = 6;    //hh:mm:ss:ms
}

enum BrainDateDurationType {
    BRAIN_TYPE_DATE_DURATION_CENTURY = 0;
    BRAIN_TYPE_DATE_DURATION_DECADE = 1;
    BRAIN_TYPE_DATE_DURATION_YEAR = 2;
    BRAIN_TYPE_DATE_DURATION_QUARTER = 3;
    BRAIN_TYPE_DATE_DURATION_SEASON = 4;
    BRAIN_TYPE_DATE_DURATION_MONTH = 5;
    BRAIN_TYPE_DATE_DURATION_WEEK = 6;
    BRAIN_TYPE_DATE_DURATION_DAY = 7;
}

enum BrainTimeDurationType {
    // Hours
    BRAIN_TYPE_DAY_DURATION_HH = 0;
    BRAIN_TYPE_DAY_DURATION_HHMM = 1;
    BRAIN_TYPE_DAY_DURATION_HHMMSS = 2;
    BRAIN_TYPE_DAY_DURATION_HHMMSSII = 3;

    // Minutes
    BRAIN_TYPE_DAY_DURATION_MM = 4;
    BRAIN_TYPE_DAY_DURATION_MMSS = 5;
    BRAIN_TYPE_DAY_DURATION_MMSSII = 6;

    // Seconds++
    BRAIN_TYPE_DAY_DURATION_SS = 7;
    BRAIN_TYPE_DAY_DURATION_SSII = 8;

    // Milliseconds
    BRAIN_TYPE_DAY_DURATION_II = 9;
}


enum BrainDateContextType {
    BRAIN_TYPE_DATE_CONTEXT_YEAR =0; // 2020,2021
    BRAIN_TYPE_DATE_CONTEXT_MONTH= 1;// 1-12 (jan-dec)
    BRAIN_TYPE_DATE_CONTEXT_DAY = 2;// 1-31
    BRAIN_TYPE_DATE_CONTEXT_DAY_OF_WEEK = 3;// 1 = monday to 7 = sunday
    BRAIN_TYPE_DATE_CONTEXT_DAY_TYPE_OF_WEEK = 4;// 1 = weekday vs. 0 = weekend
    BRAIN_TYPE_DATE_CONTEXT_WEEK_OF_YEAR = 5;// 1-52
    BRAIN_TYPE_DATE_CONTEXT_WEEK_OF_MONTH = 6;// 1-5
    BRAIN_TYPE_DATE_CONTEXT_DAY_OF_YEAR = 7;// 1-366
    BRAIN_TYPE_DATE_CONTEXT_CENTURY =8; // 20 or 21
    BRAIN_TYPE_DATE_CONTEXT_DECADE =9; // 2020 =202
    BRAIN_TYPE_DATE_CONTEXT_QUARTER_OF_YEAR = 10;// 1-4
    BRAIN_TYPE_DATE_CONTEXT_SEASON_OF_YEAR = 11;// 1-4 or 1-6

    // Combinations
    BRAIN_TYPE_DATE_CONTEXT_DATE = 12;// day+month+year
    BRAIN_TYPE_DATE_CONTEXT_MONTH_AND_YEAR = 13; // 5th month of 2011
    BRAIN_TYPE_DATE_CONTEXT_DECADE_AND_CENTURY = 14;
    BRAIN_TYPE_DATE_CONTEXT_YEAR_AND_CENTURY = 15;
    BRAIN_TYPE_DATE_CONTEXT_MONTH_AND_SEASON_OF_YEAR = 16;
    BRAIN_TYPE_DATE_CONTEXT_MONTH_AND_QUARTER_OF_YEAR = 17;
    BRAIN_TYPE_DATE_CONTEXT_DAY_AND_DAY_TYPE_OF_WEEK=18;
    BRAIN_TYPE_DATE_CONTEXT_DAY_AND_DAY_OF_WEEK=19;
    BRAIN_TYPE_DATE_CONTEXT_MONTH_OF_YEAR = 20;
}

enum BrainTimeContextType {
        BRAIN_TYPE_TIME_CONTEXT_HOUR = 0;
        BRAIN_TYPE_TIME_CONTEXT_MINUTE = 1;
        BRAIN_TYPE_TIME_CONTEXT_SECOND = 2;
        BRAIN_TYPE_TIME_CONTEXT_PART_OF_DAY = 3;
        BRAIN_TYPE_TIME_CONTEXT_QUARTER_OF_DAY = 4;
        BRAIN_TYPE_TIME_CONTEXT_QUARTER_OF_HOUR = 5;
        BRAIN_TYPE_TIME_CONTEXT_MINUTE5_OF_DAY = 6;
        BRAIN_TYPE_TIME_CONTEXT_MINUTE5_OF_HOUR = 7;

        // Combinations
        BRAIN_TYPE_TIME_CONTEXT_TIME = 8; // hour+minute+second
        BRAIN_TYPE_TIME_CONTEXT_HOUR_AND_PART_OF_DAY = 9;
        BRAIN_TYPE_TIME_CONTEXT_HOUR_AND_QUARTER_OF_DAY = 10;

}

enum BrainInputDataType {
    BRAIN_INPUT_DATA_TYPE_UNKNOWN = 0;
    BRAIN_INPUT_DATA_TYPE_STRING = 1;
    BRAIN_INPUT_DATA_TYPE_BOOL = 2;
    BRAIN_INPUT_DATA_TYPE_IN32 = 3;
    BRAIN_INPUT_DATA_TYPE_IN64 = 4;
    BRAIN_INPUT_DATA_TYPE_UIN32 = 5;
    BRAIN_INPUT_DATA_TYPE_UIN64 = 6;
    BRAIN_INPUT_DATA_TYPE_SIN32 = 7;
    BRAIN_INPUT_DATA_TYPE_SIN64 = 8;
    BRAIN_INPUT_DATA_TYPE_FIXED32 = 9;
    BRAIN_INPUT_DATA_TYPE_FIXED64 = 10;
    BRAIN_INPUT_DATA_TYPE_SFIXED32 = 11;
    BRAIN_INPUT_DATA_TYPE_SFIXED64 = 12;
    BRAIN_INPUT_DATA_TYPE_DOUBLE = 13;
    BRAIN_INPUT_DATA_TYPE_FLOAT = 14;
}

enum BrainProcessType {
    INGESTION = 0;
    ENRICH = 1;
    QUANTIZATION = 2;
    FILTER = 3;
    PIVOT = 4;
    COMPUTE = 5;
    REDUCE = 6;
    REPOSITORY = 7;
    JOINER = 8;
}

enum BrainAudioFormat {
    BRAIN_AUDIO_UNKNOWN_FORMAT = 0;
    BRAIN_AUDIO_MP3_FORMAT = 1;
    BRAIN_AUDIO_MP4_FORMAT = 2;
    BRAIN_AUDIO_M4A_FORMAT = 3;
    BRAIN_AUDIO_FLAC_FORMAT = 4;
    BRAIN_AUDIO_WAV_FORMAT = 5;
    BRAIN_AUDIO_WMA_FORMAT = 6;
}

enum BrainImageFormat {
    BRAIN_UNKNOWN_IMAGE_FORMAT = 0;
    BRAIN_IMAGE_JPEG_FORMAT = 1; // define semantics - chest xray, knee chest
    BRAIN_IMAGE_PNG_FORMAT = 2;
    BRAIN_IMAGE_GIF_FORMAT = 3;
}

enum BrainVideoFormat {
    BRAIN_VIDEO_UNKNOWN_FORMAT = 0;
    BRAIN_VIDEO_MPEG4_FORMAT = 1;
    BRAIN_VIDEO_WMV_FORMAT = 2;
    BRAIN_VIDEO_MOV_FORMAT = 3;
    BRAIN_VIDEO_FLV_FORMAT = 4;
    BRAIN_VIDEO_MKV_FORMAT = 5;
    BRAIN_VIDEO_AVI_FORMAT = 6;
}
enum BrainTextEncoding {
    BRAIN_TEXT_ENCODING_UTF16 = 0;
    BRAIN_TEXT_ENCODING_UTF8 = 1;
    BRAIN_TEXT_ENCODING_ASCII = 2;
}
enum BrainDocumentType {
    BRAIN_DOCUMENT_TYPE_INVOICE = 0;
    BRAIN_DOCUMENT_TYPE_AADHAAR = 1;
    BRAIN_DOCUMENT_TYPE_PAN = 2;
    BRAIN_DOCUMENT_TYPE_LICENCE = 3;
}
enum BrainDocumentFormat {
    BRAIN_DOCUMENT_FORMAT_WORD = 0;
    BRAIN_DOCUMENT_FORMAT_EXCEL = 1;
    BRAIN_DOCUMENT_FORMAT_PPTX = 2;
    BRAIN_DOCUMENT_FORMAT_PDF = 3;
}
enum BrainTextType {
    BRAIN_TEXT_TYPE_TWEET = 0;
    BRAIN_TEXT_TYPE_REVIEW = 1;
    BRAIN_TEXT_TYPE_CHAT = 2;
}
enum BrainAudioType {
    BRAIN_AUDIO_TYPE_CONVERSATION = 0;
    BRAIN_AUDIO_TYPE_SPEECH = 1;
    BRAIN_AUDIO_TYPE_SONG = 2;
}
enum BrainVideoType {
    BRAIN_VIDEO_TYPE_CAMERA_FEED = 0;
    BRAIN_VIDEO_TYPE_YOUTUBE = 1;
}
enum BrainImageType {
    BRAIN_IMAGE_TYPE_SOCIAL_MEDIA = 0;
    BRAIN_IMAGE_TYPE_DATABASE = 1;
}
enum BrainLanguageType {
    BRAIN_LANGUAGE_UNKNOWN = 0;
    BRAIN_LANGUAGE_ENGLISH = 1;
    BRAIN_LANGUAGE_HINDI = 2;
}
enum BrainPayloadType {
    BRAIN_PAYLOAD_TYPE_UNKNOWN = 0;
    BRAIN_PAYLOAD_TYPE_REFERENCE = 1;
    BRAIN_PAYLOAD_TYPE_VALUE = 2;
}
enum BrainTimeWindowType {
    BRAIN_TIME_WINDOW_TYPE_LATEST = 0;
    BRAIN_TIME_WINDOW_TYPE_5_MINUTES = 1;
    BRAIN_TIME_WINDOW_TYPE_15_MINUTES = 2;
    BRAIN_TIME_WINDOW_TYPE_HOUR = 3;
    BRAIN_TIME_WINDOW_TYPE_THREE_HOUR = 4;
    BRAIN_TIME_WINDOW_TYPE_SIX_HOUR = 5;
    BRAIN_TIME_WINDOW_TYPE_TWELVE_HOUR = 6;
    BRAIN_TIME_WINDOW_TYPE_DAY = 7;
    BRAIN_TIME_WINDOW_TYPE_WEEK = 8;
    BRAIN_TIME_WINDOW_TYPE_MONTH = 9;
    BRAIN_TIME_WINDOW_TYPE_QUARTER = 10;
    BRAIN_TIME_WINDOW_TYPE_YEAR = 11;
}
//
enum BrainFunctionType {
    FUNCTION_TYPE_INTERPRETATION = 0;
    FUNCTION_TYPE_DEEP_LEARNING = 1;
    FUNCTION_TYPE_MACHINE_LEARNING = 2;
    FUNCTION_TYPE_RULE_ENGINE = 3;
    FUNCTION_TYPE_OPTIMIZATION = 4;
}

enum BrainModelType {
    MODEL_TYPE_MULTIVARIATE_CLASSIFICATION = 0; // e.g.
    MODEL_TYPE_DOCUMENT_CLASSIFICATION = 1;
    MODEL_TYPE_TEXT_CLASSIFICATION = 2;
    MODEL_TYPE_MULTIVARIATE_REGRESSION = 3;
    MODEL_TYPE_SPEECH_TO_TEXT = 4;
    MODEL_TYPE_TEXT_TO_SPEECH = 5;
    MODEL_TYPE_IMAGE_TO_FACE = 6;
    MODEL_TYPE_FACE_TO_EMOTION = 7;
}
enum FunctionCallType {
    FUNCTION_CALL_TYPE_SDK = 0;
    FUNCTION_CALL_TYPE_GRPC = 1;
    FUNCTION_CALL_TYPE_HTTP = 2;
}
enum BrainFeatureType {
   // BRAIN_FEATURE_KG = 0;
    BRAIN_FEATURE_DAG = 0;
    BRAIN_FEATURE_INTERPRETATION = 1;
    BRAIN_FEATURE_FUNCTION_OUT = 3;
}

enum BrainPrimitiveDataType {
    BRAIN_PERSISTENCE_DATA_TYPE_FLOAT = 0;
    BRAIN_PERSISTENCE_DATA_TYPE_DOUBLE = 1;
    BRAIN_PERSISTENCE_DATA_TYPE_UINT32 = 2;
    BRAIN_PERSISTENCE_DATA_TYPE_SINT32 = 3;
    BRAIN_PERSISTENCE_DATA_TYPE_UINT64 = 4;
    BRAIN_PERSISTENCE_DATA_TYPE_SINT64 = 5;
    BRAIN_PERSISTENCE_DATA_TYPE_STRING = 6;
    BRAIN_PERSISTENCE_DATA_TYPE_BOOLEAN = 7;
}

enum BrainGetMultipleFeatureRequestType {

    BRAIN_GET_FEATURES_BETWEEN_TIME_RANGE = 0;
    BRAIN_GET_FEATURES_BY_START_TIME = 1;
    BRAIN_GET_TOP_FEATURES = 2;
    BRAIN_GET_FEATURES_LATEST = 3;

}

enum BrainFeatureCrudRequestType {

    BRAIN_FEATURE_CREATE_REQUEST = 0;
    BRAIN_FEATURE_UPDATE_REQUEST = 1;
    BRAIN_FEATURE_DELETE_REQUEST = 2;

}