syntax = "proto3";

package jio.brain.proto.function.api;

option java_package = "jio.brain.proto.function.api";
option java_multiple_files = true;

//import "jio/brain/proto/base/enums.proto";
import "jio/brain/proto/base/status.proto";
import "jio/brain/proto/base/token.proto";
//import "jio/brain/proto/event/event.proto";
import "jio/brain/proto/types/primitive.proto";


message BrainFunctionConfig {
  jio.brain.proto.base.BrainToken function = 1;
}
/**
  Execute remote functions - Rules and Remote ML
 */
service FunctionExecutionService {
  rpc serve(BrainExecutionRequest) returns (BrainExecutionResponse) {}
}
message BrainExecutionRequest {
  jio.brain.proto.base.BrainToken function = 1;
  map<uint32, jio.brain.proto.types.BrainPrimitiveData> data = 2;
}
message BrainExecutionResponse {
  jio.brain.proto.base.BrainStatus status = 1;
  map<uint32, jio.brain.proto.types.BrainPrimitiveData> data = 2;
}

/**
  Update function to feature config in Config service API.
  Will be called by rule engine and ML infra to add config of function in schema
 */
service FunctionMetadataConfigService {
  rpc updateFunctionConfig(FunctionMetadataConfigRequest) returns (FunctionMetadataConfigResponse) {}
}
message FunctionMetadataConfigRequest {
  jio.brain.proto.base.BrainToken function = 1;
  repeated jio.brain.proto.base.BrainToken feature_set = 2;
}
message FunctionMetadataConfigResponse {
  jio.brain.proto.base.BrainStatus status = 1;
}

/**
  CURRENTLY IMPLEMENTED AS REST API

  Get features from functions
  Config service API. Used in feature lake
 */
service FunctionMetadataService {
  rpc getDependentFeatures(BrainFunctionMetadataRequest) returns (BrainFunctionMetadataResponse) {}
}
message BrainFunctionMetadataRequest {
  jio.brain.proto.base.BrainToken function = 1;
}
message BrainFunctionMetadataResponse {
  jio.brain.proto.base.BrainStatus status = 1;
  repeated jio.brain.proto.base.BrainToken feature_set = 2;
}

/**
  CURRENTLY IMPLEMENTED AS REST API

  Get functions from features
  Config service API. Used in feature lake
 */
service FeatureMetadataService {
  rpc getDependentFunctions(FeatureMetadataRequest) returns (FeatureMetadataResponse) {}
}
message FeatureMetadataRequest {
  jio.brain.proto.base.BrainToken feature = 1;
}
message FeatureMetadataResponse {
  jio.brain.proto.base.BrainStatus status = 1;
  repeated jio.brain.proto.base.BrainToken function_set = 2;
}