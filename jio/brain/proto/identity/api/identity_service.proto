syntax = "proto3";

package jio.brain.proto.identity.api;

option java_package = "com.jio.brain.proto.identity.api";
option java_multiple_files = true;

import "jio/brain/proto/base/id.proto";
import "jio/brain/proto/base/status.proto";

message IdentityRequest {
  oneof id_type {
    uint32 collection_type_id = 1;
    uint32 entity_type_id = 2;
  }
  repeated string primary_biz_id = 3;
}

message IdentityResponse {
  repeated jio.brain.proto.base.BrainId brain_id = 1;
  jio.brain.proto.base.BrainStatus brainStatus = 2;
}

message IdentityCreateBrainIdWithPrimaryAndBizIdRequest {
  oneof id_type {
    uint32 collection_type_id = 1;
    uint32 entity_type_id = 2;
  }
  repeated string secondary_biz_ids = 3;
  string primary_biz_id = 4;
}

message IdentityCreateBrainIdWithPrimaryAndBizIdResponse {
  jio.brain.proto.base.BrainId brain_id = 1;
  jio.brain.proto.base.BrainStatus brainStatus = 2;
}

message IdentityAddSecondaryBizIdsWithEntityIdRequest {
  uint64 entity_id = 1;
  repeated string secondary_biz_ids = 2;
}

message IdentityAddSecondaryBizIdsWithEntityIdResponse {
  jio.brain.proto.base.BrainId brain_id = 1;
  jio.brain.proto.base.BrainStatus brainStatus = 2;
}

message IdentityAddSecondaryBizIdsWithPrimaryBizIdAndEntityTypeRequest {
  string primary_biz_id = 1;
  repeated string secondary_biz_ids = 2;
  oneof id_type {
    uint32 collection_type_id = 3;
    uint32 entity_type_id = 4;
  }
}

message IdentityAddSecondaryBizIdsWithPrimaryBizIdAndEntityTypeResponse {
  jio.brain.proto.base.BrainId brain_id = 1;
  jio.brain.proto.base.BrainStatus brainStatus = 2;
}


message IdentityAddNameAliases{
  uint64 entity_id = 1;
  string language = 2;
  string name = 3;
}

message IdentityNameAliases {
  jio.brain.proto.base.BrainId brain_id = 1;
  jio.brain.proto.base.BrainStatus brainStatus = 2;
}

service EntityIdService {
  rpc getBrainIdForEntity(IdentityRequest) returns (IdentityResponse);
  rpc createEntityWithPrimaryAndSecondaryIds(IdentityCreateBrainIdWithPrimaryAndBizIdRequest) returns (IdentityCreateBrainIdWithPrimaryAndBizIdResponse);
  rpc updateSecondaryBizIds(IdentityAddSecondaryBizIdsWithEntityIdRequest) returns (IdentityAddSecondaryBizIdsWithEntityIdResponse);
  rpc updateSecondaryBizIdsWithEntityType(IdentityAddSecondaryBizIdsWithPrimaryBizIdAndEntityTypeRequest) returns (IdentityAddSecondaryBizIdsWithPrimaryBizIdAndEntityTypeResponse);
  rpc addNameAliases(IdentityAddNameAliases) returns(IdentityNameAliases);
}

/*
Request :
{
  "vertical" : "hr",
  "domain" : "payroll",
  "meta_type_id" : "58294", // represent "employee" type in "hr" vertical and "payroll" domain
  "unique_key" : "EMP0003",
  "type" : "BRAIN_ENTITY_TOKEN"
}
// *** For better performance entity type should be in redis cache ***
Response :
{
  "id" : {
    "key" : "/hr/payroll/entity_id/customer/EMP0003", // generated from employee
    "u64" : 89012
  }
}
 */