syntax = "proto3";

package jio.brain.proto.process;

option java_package = "com.jio.brain.proto.process";
option java_multiple_files = true;

import "jio/brain/proto/quantity/quantity_temporal.proto";
import "jio/brain/proto/base/enums.proto";

message BrainReduceProcessSchema {
  repeated ReduceInstance instances = 1;
}

message ReduceInstance {
  repeated AggregateCondition aggregate_condition = 1;
  string output_topic = 2;
  string output_event_schema = 3;
  optional jio.brain.proto.quantity.BrainTimeInstance start_time = 4;
  optional jio.brain.proto.quantity.BrainTimeInstance end_time = 5;
  uint32 window_time_minutes = 6;  // 10-10:30  , 10:15-10:45
  jio.brain.proto.base.BrainTimeWindowType  time_window = 7;
}

message AggregateCondition {
  optional string input_property = 1;
  optional string output_property = 2;
  optional string count_property = 3;
  AggregateConditionType type = 4;

  enum AggregateConditionType {
    BRAIN_AGGREGATION_SUM = 0;
    BRAIN_AGGREGATION_AVERAGE = 1;
    BRAIN_AGGREGATION_COUNT = 2;
    BRAIN_AGGREGATION_MIN = 3;
    BRAIN_AGGREGATION_MAX = 4;
    BRAIN_AGGREGATION_SLOPE = 5;
    BRAIN_AGGREGATION_PRODUCT = 6;
    BRAIN_AGGREGATION_DISTRIBUTION = 7;
  }

}


/*
  reduce :

  1.  time-window -> 5
      output-topic -> out-topic
      output-schema -> /common/event/order_aggregate

      aggregate condition ->
      1.1 inputProperty -> order_amount
          outputProperty -> order_amount_sum
          type -> sum
      1.2 inputProperty -> order_amount
          outputProperty -> order_amount_average
          type -> average
      1.2 inputProperty -> not required
          outputProperty -> count
          type -> count


  2. time -> 15 min window
      count


Brain Event ->

 map < order_amount_sum , 0 >
  map < order_amount_average , 0 >
 map < order_amount_sum , 0 >


 */